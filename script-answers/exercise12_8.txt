Script started on Fri Oct 11 07:31:56 2024
[1m[7m%[27m[1m[0m                                                                                                                                                          ]2;dansci@Daniels-MacBook-Air:~/Documents/Projects/HelsinkiFullStack/part12/part12-containers-applications/todo-app/todo-backend]1;../todo-backend]7;file://Daniels-MacBook-Air.local/Users/dansci/Documents/Projects/HelsinkiFullStack/part12/part12-containers-applications/todo-app/todo-backend\[0m[27m[24m[J[01;32mâžœ  [36mtodo-backend[00m [K[?1h=[?2004h[0m[27m[24m[J[01;32mâžœ  [36mtodo-backend[00m [01;34mgit:([31mmain[34m) [33mâœ—[00m [Kddocker compose u -f docker-compose-mongo.yml[1m [0m[0m up -d[?1l>[?2004l
]2;docker compose -f docker-compose-mongo.yml up -d]1;docker[1A[1B[0G[?25l[+] Running 0/0
 [33mâ ‹[0m Container todo-backend-mongo-1  Starting                                                                                                          [34m0.1s [0m
[?25h[1A[1A[0G[?25l[+] Running 0/1
 [33mâ ™[0m Container todo-backend-mongo-1  Starting                                                                                                          [34m0.2s [0m
[?25h[1A[1A[0G[?25l[34m[+] Running 1/1[0m
 [32mâœ”[0m Container todo-backend-mongo-1  [32mStarted[0m                                                                                                           [34m0.2s [0m
[?25h[1m[7m%[27m[1m[0m                                                                                                                                                          ]2;dansci@Daniels-MacBook-Air:~/Documents/Projects/HelsinkiFullStack/part12/part12-containers-applications/todo-app/todo-backend]1;../todo-backend]7;file://Daniels-MacBook-Air.local/Users/dansci/Documents/Projects/HelsinkiFullStack/part12/part12-containers-applications/todo-app/todo-backend\[0m[27m[24m[J[01;32mâžœ  [36mtodo-backend[00m [01;34mgit:([31mmain[34m) [33mâœ—[00m [K[?1h=[?2004hddocker exect   -it todo-backend-mongo-1 bash[?1l>[?2004l
]2;docker exec -it todo-backend-mongo-1 bash]1;docker[?2004hroot@ac72d81c8cb6:/# mongoshn--   --help[1P
[?2004l
  $ mongosh [options] [db address] [file names (ending in .js or .mongodb)]

  Options:

    -h, --help                                 Show this usage information
    -f, --file [arg]                           Load the specified mongosh script
        --host [arg]                           Server to connect to
        --port [arg]                           Port to connect to
        --build-info                           Show build information
        --version                              Show version information
        --quiet                                Silence output from the shell during the connection process
        --shell                                Run the shell after executing files
        --nodb                                 Don't connect to mongod on startup - no 'db address' [arg] expected
        --norc                                 Will not run the '.mongoshrc.js' file on start up
        --eval [arg]                           Evaluate javascript
        --json[=canonical|relaxed]             Print result of --eval as Extended JSON, including errors
        --retryWrites[=true|false]             Automatically retry write operations upon transient network errors (Default: true)

  Authentication Options:

    -u, --username [arg]                       Username for authentication
    -p, --password [arg]                       Password for authentication
        --authenticationDatabase [arg]         User source (defaults to dbname)
        --authenticationMechanism [arg]        Authentication mechanism
        --awsIamSessionToken [arg]             AWS IAM Temporary Session Token ID
        --gssapiServiceName [arg]              Service name to use when authenticating using GSSAPI/Kerberos
        --sspiHostnameCanonicalization [arg]   Specify the SSPI hostname canonicalization (none or forward, available on Windows)
        --sspiRealmOverride [arg]              Specify the SSPI server realm (available on Windows)

  TLS Options:

        --tls                                  Use TLS for all connections
        --tlsCertificateKeyFile [arg]          PEM certificate/key file for TLS
        --tlsCertificateKeyFilePassword [arg]  Password for key in PEM file for TLS
        --tlsCAFile [arg]                      Certificate Authority file for TLS
        --tlsAllowInvalidHostnames             Allow connections to servers with non-matching hostnames
        --tlsAllowInvalidCertificates          Allow connections to servers with invalid certificates
        --tlsCertificateSelector [arg]         TLS Certificate in system store (Windows and macOS only)
        --tlsCRLFile [arg]                     Specifies the .pem file that contains the Certificate Revocation List
        --tlsDisabledProtocols [arg]           Comma separated list of TLS protocols to disable [TLS1_0,TLS1_1,TLS1_2]
        --tlsFIPSMode                          Enable the system TLS library's FIPS mode

  API version options:

        --apiVersion [arg]                     Specifies the API version to connect with
        --apiStrict                            Use strict API version mode
        --apiDeprecationErrors                 Fail deprecated commands for the specified API version

  FLE Options:

        --awsAccessKeyId [arg]                 AWS Access Key for FLE Amazon KMS
        --awsSecretAccessKey [arg]             AWS Secret Key for FLE Amazon KMS
        --awsSessionToken [arg]                Optional AWS Session Token ID
        --keyVaultNamespace [arg]              database.collection to store encrypted FLE parameters
        --kmsURL [arg]                         Test parameter to override the URL of the KMS endpoint

  OIDC auth options:

        --oidcFlows[=auth-code,device-auth]    Supported OIDC auth flows
        --oidcRedirectUri[=url]                Local auth code flow redirect URL [http://localhost:27097/redirect]
        --oidcTrustedEndpoint                  Treat the cluster/database mongosh as a trusted endpoint
        --oidcIdTokenAsAccessToken             Use ID tokens in place of access tokens for auth
        --oidcDumpTokens[=mode]                Debug OIDC by printing tokens to mongosh's output [full|include-secrets]

  DB Address Examples:

        foo                                    Foo database on local machine
        192.168.0.5/foo                        Foo database on 192.168.0.5 machine
        192.168.0.5:9999/foo                   Foo database on 192.168.0.5 machine on port 9999
        mongodb://192.168.0.5:9999/foo         Connection string URI can also be used

  File Names:

        A list of files to run. Files must end in .js and will exit after unless --shell is specified.

  Examples:

        Start mongosh using 'ships' database on specified connection string:
        $ mongosh mongodb://192.168.0.5:9999/ships

  For more information on usage: https://docs.mongodb.com/mongodb-shell.
[?2004hroot@ac72d81c8cb6:/# mongosh --help     u root -p example
[?2004l]0;mongosh mongodb://<credentials>@127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000Current Mongosh Log ID:	67091b652a44b48a9259139d
Connecting to:		[1m[32mmongodb://<credentials>@127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.3.2[0m
Using MongoDB:		8.0.1
[1m[33mUsing Mongosh[0m:		2.3.2

For mongosh info see: https://www.mongodb.com/docs/mongodb-shell/


To help improve our products, anonymous usage data is collected and sent to MongoDB periodically (https://www.mongodb.com/legal/privacy-policy).
You can opt-out by running the disableTelemetry() command.

[1G[0J [1G[1m[33m------[0m
   [1m[33mThe server generated these startup warnings when booting[0m
   2024-10-11T12:32:28.485+00:00: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine. See http://dochub.mongodb.org/core/prodnotes-filesystem
   2024-10-11T12:32:29.795+00:00: For customers running the current memory allocator, we suggest changing the contents of the following sysfsFile
   2024-10-11T12:32:29.795+00:00: We suggest setting the contents of sysfsFile to 0.
   2024-10-11T12:32:29.795+00:00: Your system has glibc support for rseq built in, which is not yet supported by tcmalloc-google and has critical performance implications. Please set the environment variable GLIBC_TUNABLES=glibc.pthread.rseq=0
   2024-10-11T12:32:29.795+00:00: vm.max_map_count is too low
   2024-10-11T12:32:29.795+00:00: We suggest setting swappiness to 0 or 1, as swapping can cause performance problems.
[1m[33m------[0m

[1G[0Jtest> [7Gshow dbs
[1madmin[0m         100.00 KiB
[1mconfig[0m         12.00 KiB
[1mlocal[0m          72.00 KiB
[1mthe_database[0m   40.00 KiB
[1G[0Jtest> [7Guse the_database
switched to db the_database
[1G[0Jthe_database> [15Gshow collea[1G[0Jthe_database> show colle[25Gctions
[1mtodos[0m
[1G[0Jthe_database> [15Gb[1G[0Jthe_database> [15Gdb.todos.find()
[
  {
    _id: ObjectId([32m'67091adbd6cb8c867a59139e'[39m),
    text: [32m'Write code'[39m,
    done: [33mtrue[39m
  },
  {
    _id: ObjectId([32m'67091adbd6cb8c867a59139f'[39m),
    text: [32m'Learn about containers'[39m,
    done: [33mfalse[39m
  }
]
[1G[0Jthe_database> [15Gdb.todos.in
db.todos.insertMany                 db.todos.insertOne                  db.todos.initializeOrderedBulkOp    db.todos.initializeUnorderedBulkOp

[1G[0Jthe_database> db.todos.in[26G
db.todos.insertMany                 db.todos.insertOne                  db.todos.initializeOrderedBulkOp    db.todos.initializeUnorderedBulkOp

[1G[0Jthe_database> db.todos.in[26GsertOne({text[33mtext[39m: [32m"[39m[32mI[39m[32mn[39m[32mc[39m[32mr[39m[32me[39m[32ma[39m[32ms[39m[32me[39m [32mt[39m[32mh[39m[32me[39m [32mn[39m[32mu[39m[32mm[39m[32mb[39m[32me[39m[32mr[39m [32mo[39m[32mf[39m [32mt[39m[32mo[39m[32mo[39m[32ml[39m[32ms[39m [32mi[39m[32mn[39m [32mm[39m[32my[39m [32mt[39m[32mo[39m[32mo[39m[32ml[39m [32mb[39m[32me[39m[32ml[39m[32mt[39m[32m"[39m, d[36mdo[39mdone: fals[33mfalse[39m})
{
  acknowledged: [33mtrue[39m,
  insertedId: ObjectId([32m'67091bbb2a44b48a9259139e'[39m)
}
[1G[0Jthe_database> [15Gdb.todos.find()
[
  {
    _id: ObjectId([32m'67091adbd6cb8c867a59139e'[39m),
    text: [32m'Write code'[39m,
    done: [33mtrue[39m
  },
  {
    _id: ObjectId([32m'67091adbd6cb8c867a59139f'[39m),
    text: [32m'Learn about containers'[39m,
    done: [33mfalse[39m
  },
  {
    _id: ObjectId([32m'67091bbb2a44b48a9259139e'[39m),
    text: [32m'Increase the number of tools in my tool belt'[39m,
    done: [33mfalse[39m
  }
]
[1G[0Jthe_database> [15Gexit
[?2004hroot@ac72d81c8cb6:/# exit
[?2004lexit
[1m[7m%[27m[1m[0m                                                                                                                                                          ]2;dansci@Daniels-MacBook-Air:~/Documents/Projects/HelsinkiFullStack/part12/part12-containers-applications/todo-app/todo-backend]1;../todo-backend]7;file://Daniels-MacBook-Air.local/Users/dansci/Documents/Projects/HelsinkiFullStack/part12/part12-containers-applications/todo-app/todo-backend\[0m[27m[24m[J[01;32mâžœ  [36mtodo-backend[00m [01;34mgit:([31mmain[34m) [33mâœ—[00m [K[?1h=[?2004hddocker ps -a[?1l>[?2004l
]2;docker ps -a]1;dockerCONTAINER ID   IMAGE     COMMAND                  CREATED         STATUS         PORTS                     NAMES
ac72d81c8cb6   mongo     "docker-entrypoint.sâ€¦"   4 minutes ago   Up 4 minutes   0.0.0.0:3456->27017/tcp   todo-backend-mongo-1
[1m[7m%[27m[1m[0m                                                                                                                                                          ]2;dansci@Daniels-MacBook-Air:~/Documents/Projects/HelsinkiFullStack/part12/part12-containers-applications/todo-app/todo-backend]1;../todo-backend]7;file://Daniels-MacBook-Air.local/Users/dansci/Documents/Projects/HelsinkiFullStack/part12/part12-containers-applications/todo-app/todo-backend\[0m[27m[24m[J[01;32mâžœ  [36mtodo-backend[00m [01;34mgit:([31mmain[34m) [33mâœ—[00m [K[?1h=[?2004hddocker kill ac[?1l>[?2004l
]2;docker kill ac]1;dockerac
[1m[7m%[27m[1m[0m                                                                                                                                                          ]2;dansci@Daniels-MacBook-Air:~/Documents/Projects/HelsinkiFullStack/part12/part12-containers-applications/todo-app/todo-backend]1;../todo-backend]7;file://Daniels-MacBook-Air.local/Users/dansci/Documents/Projects/HelsinkiFullStack/part12/part12-containers-applications/todo-app/todo-backend\[0m[27m[24m[J[01;32mâžœ  [36mtodo-backend[00m [01;34mgit:([31mmain[34m) [33mâœ—[00m [K[?1h=[?2004hddocker rm ac[?1l>[?2004l
]2;docker rm ac]1;dockerac
[1m[7m%[27m[1m[0m                                                                                                                                                          ]2;dansci@Daniels-MacBook-Air:~/Documents/Projects/HelsinkiFullStack/part12/part12-containers-applications/todo-app/todo-backend]1;../todo-backend]7;file://Daniels-MacBook-Air.local/Users/dansci/Documents/Projects/HelsinkiFullStack/part12/part12-containers-applications/todo-app/todo-backend\[0m[27m[24m[J[01;32mâžœ  [36mtodo-backend[00m [01;34mgit:([31mmain[34m) [33mâœ—[00m [K[?1h=[?2004heexit[?1l>[?2004l
]2;exit]1;exit
Script done on Fri Oct 11 07:37:00 2024
